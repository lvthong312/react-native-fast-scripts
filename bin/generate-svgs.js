// scripts/generate-svgs.js
import fs from 'fs';
import path from 'path';
const args = process.argv.slice(2);
// Default output directory = project root
let __dirname = process.cwd();

// Check for --dir argument
const dirIndex = args.findIndex((arg) => arg.startsWith("--dir"));
if (dirIndex !== -1) {
  const dirArg = args[dirIndex].split("=")[1] || args[dirIndex + 1];
  if (dirArg) {
    // Replace '@' with '.' to resolve project-relative path
    __dirname = path.resolve(process.cwd(), dirArg.replace(/^@/, "."));
    args.splice(dirIndex, 2);
  }
}

// Ensure output directory exists
if (!fs.existsSync(__dirname)) {
  fs.mkdirSync(__dirname, { recursive: true });
}

// ======== Cấu hình ========

const svgDir = path.resolve(__dirname, '.'); // folder svgs
const outputFile = path.resolve(__dirname, './index.ts'); // output ngoài folder svgs
const outputFileSVGIcon = path.resolve(__dirname, './SvgBase.tsx'); // output ngoài folder svgs

const files = fs.readdirSync(svgDir).filter(f => f.endsWith('.svg'));

// comment auto generated
const headerComment = `// ⚠️ This file is auto-generated by generate-svgs.js
// Do not edit this file manually.\n`;

// tạo import
const imports = files
  .map(f => {
    const name = f.replace('.svg', '');
    return `import ${name} from "./${f}";`; // thêm './' vì file output nằm ngoài folder
  })
  .join('\n');

// tạo export object
const exports = `export const icons = {\n${files
  .map(f => {
    const name = f.replace('.svg', '');
    return `  "${name}": ${name},`;
  })
  .join('\n')}\n};`;

// tạo type
const type = `export type IconName = keyof typeof icons;`;
// tạo component SvgIcon
const component = `import React from 'react';
import { SvgProps } from 'react-native-svg';
import { icons, type IconName } from './index.ts';
type IconProps = {
  name: IconName;
  width?: number;
  height?: number;
  color?: string;
  size?: number;
};

export const SvgBase: React.FC<
  IconProps & Omit<SvgProps, 'size' | 'width' | 'height' | 'fill' | 'stroke'>
> = ({ name, size, width = 24, height = 24, color, ...rest }) => {
  const SvgBaseComponent = icons[name];
  if (!SvgBaseComponent) {
    return null;
  }
  return (
    <SvgBaseComponent
      width={size || width}
      height={size || height}
      color={color}
      {...rest}
    />
  );
};
`;

// ghi file index.ts
fs.writeFileSync(
  outputFile,
  `${headerComment}\n${imports}\n\n${exports}\n\n${type}\n`,
  'utf8',
);
// ghi file SvgIcon.ts
fs.writeFileSync(outputFileSVGIcon, `${headerComment}\n${component}\n`, 'utf8');

console.log(`✅ Generated ${outputFile} with ${files.length} SVG icons.`);
